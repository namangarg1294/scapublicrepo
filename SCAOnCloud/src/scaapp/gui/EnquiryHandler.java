/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scaapp.gui;

import scaapp.gui.*;
import scaapp.pojo.EmployeeDetails;
import com.alee.laf.WebLookAndFeel;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import scaapp.dao.BatchDao;
import scaapp.dao.CourseDao;
import scaapp.dao.EmployeeDao;
import scaapp.dao.EnquiryDao;
import scaapp.dao.PendingPayementDao;
import scaapp.dao.StudentTransactionDao;
import scaapp.gui.financemanager.ViewDayWiseFeeCollectionByCashier;
import scaapp.pojo.EnquiryDetails;
import scaapp.pojo.MyPayement;
import scaapp.pojo.StudentTransaction;
import scaapp.utils.FinancialDetailsOfReport;
import scaapp.utils.ReportOff;
import scaapp.utils.ReportPrinter;
import scaapp.utils.ReportPrinterFinanceManager;

/**
 *
 * @author Comp10
 */
public class EnquiryHandler extends javax.swing.JFrame {

    /**
     * Creates new form ViewStudentDetails
     */
      ArrayList<StudentTransaction> list;
    private  DefaultTableModel model;
    EmployeeDetails ed;
    public EnquiryHandler() {
        initComponents();
        mansarovar.setSelected(true);
        indrapuri.setSelected(true);
        jCourseList.addItem("All");
        this.model = (DefaultTableModel)jtMyPayement.getModel();
         try {
            ArrayList <String> list=CourseDao.getCourse();
            for(String s: list){
                jCourseList.addItem(s);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewDayWiseFeeCollectionByCashier.class.getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList<String> list=null;
        try {
            list = BatchDao.getAllBatchId();
        } catch (SQLException ex) {
            Logger.getLogger(EnquiryHandler.class.getName()).log(Level.SEVERE, null, ex);
        }
//         for(String s:list)
//               jcbatches.addItem(s);
//         minFee.requestFocus();
         setLocationRelativeTo(null);
         JPanel panel = (JPanel)this.getContentPane();
        InputMap im = panel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        im.put(KeyStroke.getKeyStroke("ctrl pressed P"), "cP");
        panel.getActionMap().put("cP", new AbstractAction(){
            public void actionPerformed(ActionEvent e) {
                 SimpleDateFormat sdf=new SimpleDateFormat("yy-MM-dd");
           String start=sdf.format(awtStartDate.getDate());
           String end=sdf.format(awtEndDate.getDate());
        System.out.println(start);
        System.out.println(end);
        getData(start,end);
                print(start,end);
            }
        });
          setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
         
    }
    public EnquiryHandler(EmployeeDetails ed){
        this();
        this.ed=ed;
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        awtStartDate = new com.toedter.calendar.JDateChooser();
        awtEndDate = new com.toedter.calendar.JDateChooser();
        mansarovar = new javax.swing.JCheckBox();
        indrapuri = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        export = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jCourseList = new javax.swing.JComboBox();
        jButton9 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMyPayement = new javax.swing.JTable();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Student Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel5.setText("Name");

        jTextField5.setEnabled(false);

        jLabel6.setText("Email");

        jTextField6.setEnabled(false);

        jLabel7.setText("Semester");

        jTextField7.setEnabled(false);

        jLabel8.setText("College");

        jTextField8.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField7)
                    .addComponent(jTextField8))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Report Generator- SCAOnCloud v1.0.0");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Batch/Fee details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanel6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel6KeyPressed(evt);
            }
        });

        jLabel13.setText("End Date");

        jLabel14.setText("Start Date");

        mansarovar.setText("Mansarovar");
        mansarovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mansarovarActionPerformed(evt);
            }
        });

        indrapuri.setText("Indrapuri");

        jButton2.setText("Fetch data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        export.setText("Export to excel");
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(awtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(63, 63, 63)
                        .addComponent(awtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mansarovar)
                    .addComponent(indrapuri))
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(export, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(export)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(mansarovar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(indrapuri))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(awtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(awtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "User details"));

        jLabel4.setText("Select Course");

        jButton9.setText("Back");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jCourseList, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCourseList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton9))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fee details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jtMyPayement.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtMyPayement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Name", "Contact", "Email", "Course"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMyPayement.setGridColor(new java.awt.Color(0, 0, 0));
        jtMyPayement.setOpaque(false);
        jScrollPane1.setViewportView(jtMyPayement);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         //getData();
          if(awtStartDate.getDate()==null){
            JOptionPane.showMessageDialog(null,"Please Select date","Error",JOptionPane.INFORMATION_MESSAGE);
            return;
        
        }   
          if(awtEndDate.getDate()==null){
            JOptionPane.showMessageDialog(null,"Please Select date","Error",JOptionPane.INFORMATION_MESSAGE);
            return;
        
        }   
            if(!mansarovar.isSelected()&&!indrapuri.isSelected())
        {
             JOptionPane.showMessageDialog(null,"Please Select atleast One Centre","Error",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
         SimpleDateFormat sdf=new SimpleDateFormat("yy-MM-dd");
           String start=sdf.format(awtStartDate.getDate());
           String end=sdf.format(awtEndDate.getDate());
        System.out.println(start);
        System.out.println(end);
        getData(start,end);
       
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel6KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel6KeyPressed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
          Login mf=new Login();
            mf.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void mansarovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mansarovarActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_mansarovarActionPerformed

    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        // TODO add your handling code here:
         if(jtMyPayement.getModel().getRowCount()==0)
            return;
          try{
     JFileChooser fileChooser = new JFileChooser();
     UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
      SwingUtilities.updateComponentTreeUI(fileChooser);
       // btn = jbutton varaiable name
    int retval = fileChooser.showSaveDialog(export);

    if (retval == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        if (file != null) {
            if (!file.getName().toLowerCase().endsWith(".xls")) {
                file = new File(file.getParentFile(), file.getName() + ".xls");



            }

            try {
                ExcelExporter exp=new ExcelExporter();
                // tabl = jtable variable name
                exp.exportTable(jtMyPayement, file);


                Desktop.getDesktop().open(file);
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();

            } catch (FileNotFoundException e) {
                e.printStackTrace();
                System.out.println("not found");
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        }


   }catch(Exception e){
       System.out.println("shit"+e);
       e.printStackTrace();
   }

        
        
    }//GEN-LAST:event_exportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnquiryHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnquiryHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnquiryHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnquiryHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WebLookAndFeel.install();
                new EnquiryHandler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser awtEndDate;
    private com.toedter.calendar.JDateChooser awtStartDate;
    private javax.swing.JButton export;
    private javax.swing.JCheckBox indrapuri;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jCourseList;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTable jtMyPayement;
    private javax.swing.JCheckBox mansarovar;
    // End of variables declaration//GEN-END:variables
private void showDataInTable(ArrayList<EnquiryDetails> listData)
    {
     model.setRowCount(0);
//        try
//        {
//            ArrayList<Performance> performanceList=PerformanceDAO.getAllData();
//            if(performanceList.isEmpty())
//            {
//                JOptionPane.showMessageDialog(null,"Sorrry! No STudent Has Given Any Exam Yet.","Error!",JOptionPane.ERROR_MESSAGE);
//                return;
//            }
        //ArrayList<MyPayement> list=null;
         //StudentDetail sd=null;
             try {
             //list=StudentTransactionDao.getStudentTransactionDetails(contactNo);
            if(listData.isEmpty())
            {
                //studentId.setText("");
                JOptionPane.showMessageDialog(null,"No data in list");
                return;
            }
              System.out.println("Enter called");
               
               //studentId.setEnabled(false);
                
               //sd=StudentDetailDao.getStudentDetailsByContactNo(studentId.getText().substring(0,10));
               //sd.setStudentContact(studentId.getText().substring(0,10));
//               studentName.setText(sd.getStudentName().toUpperCase());
//               studentContact.setText(sd.getStudentContact());
//               studentEmail.setText(sd.getStudentEmail().toUpperCase());
//               studentCollage.setText(sd.getStudentCollege().toUpperCase());
//               studentSem.setText(sd.getStudentSem());
             // studentList.add(sd);
              
               //System.out.println(sd);
            } catch (Exception ex) {
                Logger.getLogger(EnquiryHandler.class.getName()).log(Level.SEVERE, null, ex);
            }
             SimpleDateFormat sdf=new SimpleDateFormat("yy-MM-dd");
             SimpleDateFormat sdf2=new SimpleDateFormat("dd-MM-yyyy");
             for(EnquiryDetails ed:listData){
            Object[] rows=new Object[7];                                                                                                                                      // 7 indicates the number of columns of table.
           
                rows[0]=ed.getName();
                rows[1]=ed.getPhno();
                rows[2]=ed.getEmail();
                rows[3]= ed.getSubject();
                //rows[4]=st.getGrossAmount();
                
                
       
               
                model.addRow(rows);}
            
//        }
//        catch(SQLException e)
//        {
//            JOptionPane.showMessageDialog(null,"SQLException:"+e,"Error!",JOptionPane.ERROR_MESSAGE);
//            e.printStackTrace();
//        }
    }

private void getData(String start,String end){
    ArrayList<EnquiryDetails> list=null;
    try{
   if(jCourseList.getSelectedItem().toString().equalsIgnoreCase("All") && mansarovar.isSelected()&&indrapuri.isSelected()){
           list=EnquiryDao.getEnquiryDetailsBetweenDates(start,end);
    }
   else if(jCourseList.getSelectedItem().toString().equalsIgnoreCase("All") && mansarovar.isSelected()){
       System.out.println("on 696");
           list=EnquiryDao.getEnquiryDetailsBetweenDatesCetreWise(start,end,"Mansarovar");
    }
   else if(jCourseList.getSelectedItem().toString().equalsIgnoreCase("All") && indrapuri.isSelected()){
           list=EnquiryDao.getEnquiryDetailsBetweenDatesCetreWise(start,end,"Indrapuri");
    }
   else if(mansarovar.isSelected()){
      list=EnquiryDao.getEnquiryDetailsCourseWiseBetweenDates(start,end,"Mansarovar",jCourseList.getSelectedItem().toString());
     
   }
   else if(indrapuri.isSelected()){
      list=EnquiryDao.getEnquiryDetailsCourseWiseBetweenDates(start,end,"Indrapuri",jCourseList.getSelectedItem().toString());
     
   }
   else if(indrapuri.isSelected()&&mansarovar.isSelected()){
      list=EnquiryDao.getEnquiryDetailsCourseWiseBetweenDatesBothCentre(start,end,jCourseList.getSelectedItem().toString());
     
   }
    }
    catch(Exception e){
        e.printStackTrace();
    }
    showDataInTable(list);
    
    
////    try {
////            list=PendingPayementDao.getPendingPayementBatchWise(jcbatches.getSelectedItem().toString(),Integer.parseInt(minFee.getText()));
////            if(list.isEmpty())
////            {
////                JOptionPane.showMessageDialog(null,"List of Students is empty");
////                model.setRowCount(0);
////                return;
////            }
////            
////            System.out.println(list.size());
////            showDataInTable();
////// TODO add your handling code here:
//////        SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yy");
//////            String start=sdf.format(awtStartDate.getDate());
//////        try {
//////            list=MyPayementDao.getMyPayementDetailsDateWise(1, start);
//////            showDataInTable();
//////        } catch (SQLException ex) {
//////            Logger.getLogger(PendingFee.class.getName()).log(Level.SEVERE, null, ex);
//////        }
////        } catch (SQLException ex) {
////            Logger.getLogger(FeeCollectionAndGSTReport.class.getName()).log(Level.SEVERE, null, ex);
////        }
//   try {
//       
//        mingst.setText("");
//        maxgst.setText("");
//        mingsti.setText("");
//        maxgsti.setText("");
//       
//       if(jEmpList.getSelectedItem().toString().equalsIgnoreCase("All")){
//           System.out.println("857");
//             if(mansarovar.isSelected()&&indrapuri.isSelected())
//               list=StudentTransactionDao.getTransactionDetailsBetweenDates(start, end);
//             else if(mansarovar.isSelected())
//               list=StudentTransactionDao.getTransactionDetailsBetweenDates(start, end,1);
//             else if(indrapuri.isSelected())
//               list=StudentTransactionDao.getTransactionDetailsBetweenDates(start, end,2);}  
//             else{
//             int eid=EmployeeDao.getEmployeeId(jEmpList.getSelectedItem().toString());
//                 System.out.println("On 865");
//             if(mansarovar.isSelected()&&indrapuri.isSelected())
//               list=StudentTransactionDao.getTransactionDetailsBetweenDatesEmployeeWise(start, end,eid);
//             else if(mansarovar.isSelected())
//               list=StudentTransactionDao.getTransactionDetailsBetweenDates(start, end,1,eid);
//             else if(indrapuri.isSelected())
//               list=StudentTransactionDao.getTransactionDetailsBetweenDates(start, end,2,eid); 
//             }
//             //System.out.println(list);
//             
//             
//      
//       showDataInTable();
//             
//             tFee.setText(list.stream().mapToDouble(a->a.getGrossAmount()).sum()+"");
//             nFee.setText(Math.round(list.stream().mapToDouble(a->a.getGrossAmount()/1.18).sum()* 100.0) / 100.0+"");
//             gst.setText(Math.round(list.stream().mapToDouble(a->a.getGrossAmount()-(a.getGrossAmount()/1.18)).sum()* 100.0) / 100.0+"");
//             //minFee.setText("");
//         } catch (SQLException ex) {
//             Logger.getLogger(EnquiryHandler.class.getName()).log(Level.SEVERE, null, ex);
//         }   
//     if(jEmpList.getSelectedItem().toString().equalsIgnoreCase("All")&&mansarovar.isSelected()){
//        if(!ed.getBatchType().equalsIgnoreCase("Project")){
//         int max= list.stream().filter(s->s.getTransactionId().contains("SCA/")).mapToInt((s)->{
//             
//             int i=s.getTransactionId().lastIndexOf("/")+1;
//             return Integer.parseInt(s.getTransactionId().substring(i));
//                  }).max().getAsInt();
//        int min= list.stream().filter(s->s.getTransactionId().contains("SCA/")).mapToInt((s)->{
//             int i=s.getTransactionId().lastIndexOf("/")+1;
//             return Integer.parseInt(s.getTransactionId().substring(i));
//                  }).min().getAsInt();
//    
//         mingst.setText("SCA/2018-2019/"+min);
//        maxgst.setText("SCA/2018-2019/"+max);
//        
//        }
//     }
//         if(jEmpList.getSelectedItem().toString().equalsIgnoreCase("All")&&indrapuri.isSelected()){
//        if(!ed.getBatchType().equalsIgnoreCase("Project")){
//                 int maxi= list.stream().filter(s->s.getTransactionId().contains("SCAI/")).mapToInt((s)->{
//             
//             int i=s.getTransactionId().lastIndexOf("/")+1;
//             return Integer.parseInt(s.getTransactionId().substring(i));
//                  }).max().getAsInt();
//        int mini= list.stream().filter(s->s.getTransactionId().contains("SCAI/")).mapToInt((s)->{
//             int i=s.getTransactionId().lastIndexOf("/")+1;
//             return Integer.parseInt(s.getTransactionId().substring(i));
//                  }).min().getAsInt();
//             mingsti.setText("SCAI/2018-2019/"+mini);
//        maxgsti.setText("SCAI/2018-2019/"+maxi);
//        }
//         }
//        
//        if(ed.getBatchType().equalsIgnoreCase("Project")){
//               int max= list.stream().mapToInt((s)->{
//             
//             int i=s.getTransactionId().lastIndexOf("/")+1;
//             return Integer.parseInt(s.getTransactionId().substring(i));
//                  }).max().getAsInt();
//        int min= list.stream().mapToInt((s)->{
//             int i=s.getTransactionId().lastIndexOf("/")+1;
//             return Integer.parseInt(s.getTransactionId().substring(i));
//                  }).min().getAsInt();
//        mingst.setText("A2I/2018-2019/"+min);
//        maxgst.setText("A2I/2018-2019/"+max);
//        
//        
//        
//        
//        }
        
     
    
}
private void print(String start,String end){
    if(list.isEmpty())
    {
        JOptionPane.showMessageDialog(null,"List of Students is empty");
        return;
    }
    ReportOff ro=new ReportOff();
    ro.setEmp(jCourseList.getSelectedItem().toString());
    ro.setStartDate(start);
    ro.setEndDate(end);
     ReportPrinterFinanceManager rp=new ReportPrinterFinanceManager();
     FinancialDetailsOfReport fdor=new FinancialDetailsOfReport();
//     fdor.setGrossAmount(Double.parseDouble(tFee.getText()));
//     fdor.setGst(Double.parseDouble(gst.getText()));
        rp.printReport(list,ro,fdor);
        model.setRowCount(0);
        list=null;
}
}
